{
  "address": "0xfF3373770060aCB237Bb0f55D09D74f349790c06",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenB",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "name": "LiquidityAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "provider",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "name": "LiquidityRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "swapper",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenIn",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "tokenOut",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "name": "TokensSwapped",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amountB",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidTokenA",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidTokenB",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_amountB",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountA",
          "type": "uint256"
        }
      ],
      "name": "swapAforB",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountB",
          "type": "uint256"
        }
      ],
      "name": "swapBforA",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenA",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenB",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xcc0423b763a6b6cfae532349991bf8fb2916c7018c13606e0ab844eb601bb1e3",
  "receipt": {
    "to": null,
    "from": "0xEb5eE7f23a380D5f714B82Fe42aa46C574d6c129",
    "contractAddress": "0xfF3373770060aCB237Bb0f55D09D74f349790c06",
    "transactionIndex": 55,
    "gasUsed": "744757",
    "logsBloom": "0x
    "blockHash": "0x3c5de1583eec3a072d2e85409677e8f4037d8b12a138c6fae1e0ffa167da22ec",
    "transactionHash": "0xcc0423b763a6b6cfae532349991bf8fb2916c7018c13606e0ab844eb601bb1e3",
    "logs": [
      {
        "transactionIndex": 55,
        "blockNumber": 7280082,
        "transactionHash": "0xcc0423b763a6b6cfae532349991bf8fb2916c7018c13606e0ab844eb601bb1e3",
        "address": "0xfF3373770060aCB237Bb0f55D09D74f349790c06",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000eb5ee7f23a380d5f714b82fe42aa46c574d6c129"
        ],
        "data": "0x",
        "logIndex": 135,
        "blockHash": "0x3c5de1583eec3a072d2e85409677e8f4037d8b12a138c6fae1e0ffa167da22ec"
      }
    ],
    "blockNumber": 7280082,
    "cumulativeGasUsed": "14502780",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x82bc4b3FfAce08EF467b504A5de1E1D739241B19",
    "0xdb19c315bbd50100e92961aD673b1837eFe5C97b"
  ],
  "numDeployments": 1,
  "solcInputHash": "85dc48672922c0d5f39ba3ed6f5a09b6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenB\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"TokensSwapped\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountB\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidTokenA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidTokenB\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amountB\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountA\",\"type\":\"uint256\"}],\"name\":\"swapAforB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountB\",\"type\":\"uint256\"}],\"name\":\"swapBforA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenA\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenB\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SimpleDEX.sol\":\"SimpleDEX\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the value of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the value of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\\n     * caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 value) external returns (bool);\\n\\n    /**\\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\\n     * allowance mechanism. `value` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\\n}\\n\",\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/SimpleDEX.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.26;\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract SimpleDEX is Ownable {\\n    IERC20 public tokenA;\\n    IERC20 public tokenB;\\n    uint256 public liquidTokenA;\\n    uint256 public liquidTokenB;\\n\\n    // Eventos\\n    event LiquidityAdded(address provider, uint256 amountA, uint256 amountB);\\n    event LiquidityRemoved(address provider, uint256 amountA, uint256 amountB);\\n    event TokensSwapped(address swapper, address tokenIn, address tokenOut, uint256 amountIn, uint256 amountOut);\\n\\n    constructor(address _tokenA, address _tokenB) Ownable(msg.sender) {\\n        require(_tokenA != address(0) && _tokenB != address(0));\\n        tokenA = IERC20(_tokenA);\\n        tokenB = IERC20(_tokenB);\\n    }\\n\\n    function addLiquidity(uint256 _amountA, uint256 _amountB)\\n        external\\n        onlyOwner\\n    {\\n        require(_amountA != 0 && _amountB != 0);\\n        tokenA.transferFrom(msg.sender, address(this), _amountA);\\n        tokenB.transferFrom(msg.sender, address(this), _amountB);\\n\\n        liquidTokenA += _amountA;\\n        liquidTokenB += _amountB;\\n\\n        emit LiquidityAdded(msg.sender, _amountA, _amountB);\\n    }\\n\\n    function removeLiquidity(uint256 _amountA, uint256 _amountB)\\n        external\\n        onlyOwner\\n    {\\n        require(_amountA > 0 && _amountB > 0);\\n\\n        tokenA.transfer(msg.sender, _amountA);\\n        tokenB.transfer(msg.sender, _amountB);\\n\\n        liquidTokenA -= _amountA;\\n        liquidTokenB -= _amountB;\\n\\n        emit LiquidityRemoved(msg.sender, _amountA, _amountB);\\n    }\\n\\n    function swapAforB(uint256 _amountA) external {\\n        require(_amountA > 0);\\n        uint256 _amountBout = getSwapAmount(liquidTokenA, liquidTokenB, _amountA);\\n        require(_amountBout <= liquidTokenB);\\n        //TRANSFERENCIAS\\n        tokenA.transferFrom(msg.sender, address(this), _amountA);\\n        tokenB.transfer(msg.sender, _amountBout);\\n        //MODIFICO LIQUIDEZ\\n        liquidTokenA += _amountA;\\n        liquidTokenB -= _amountBout; \\n\\n        emit TokensSwapped(msg.sender, address(tokenA), address(tokenB), _amountA, _amountBout);\\n    }\\n\\n    function swapBforA(uint256 _amountB) external {\\n        require(_amountB > 0);\\n        uint256 _amountAout = getSwapAmount(liquidTokenB, liquidTokenA, _amountB);\\n        require(_amountAout <= liquidTokenA);\\n        //TRANSFERENCIAS\\n        tokenB.transferFrom(msg.sender, address(this), _amountB);\\n        tokenA.transfer(msg.sender, _amountAout);\\n        //MODIFICO LIQUIDEZ\\n        liquidTokenB += _amountB;\\n        liquidTokenA -= _amountAout; \\n\\n        emit TokensSwapped(msg.sender, address(tokenB), address(tokenA), _amountB, _amountAout);\\n    }\\n\\n    function getPrice(address _token) external view returns (uint256) {\\n        require(\\n            _token == address(tokenA) || _token == address(tokenB),\\n            \\\"Token incorrecto\\\"\\n        );\\n\\n        if (_token == address(tokenA)) {\\n            return (liquidTokenB * 1e18) / liquidTokenA;\\n        } else {\\n            return (liquidTokenA * 1e18) / liquidTokenB;\\n        }\\n    }\\n    //CALCULO PRODUCTO CONSTANTE\\n    function getSwapAmount(uint256 x,uint256 y, uint256 dx) internal pure returns (uint256) {\\n        uint256 newX = x + dx;\\n        uint256 newY =  (x * y) / newX;\\n        return y - newY;\\n    }\\n}\\n\",\"keccak256\":\"0x855b3e00a2ddec82654a1685faba0d58b8e0dc1551d591e665faae6353ddb7d7\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610c91380380610c9183398101604081905261002f91610125565b338061005557604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b61005e816100b9565b506001600160a01b0382161580159061007f57506001600160a01b03811615155b61008857600080fd5b600180546001600160a01b039384166001600160a01b03199182161790915560028054929093169116179055610158565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461012057600080fd5b919050565b6000806040838503121561013857600080fd5b61014183610109565b915061014f60208401610109565b90509250929050565b610b2a806101676000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b146101435780639cd441da146101545780639d7de6b314610167578063e4f1f70a1461017a578063efe48add1461018d578063f2fde38b1461019657600080fd5b80630fc63d10146100b95780633a60cacf146100e957806341976e09146101005780635f64b55b14610113578063715018a6146101265780638014a7aa14610130575b600080fd5b6001546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f260035481565b6040519081526020016100e0565b6100f261010e3660046109ce565b6101a9565b6002546100cc906001600160a01b031681565b61012e61026f565b005b61012e61013e3660046109fe565b610283565b6000546001600160a01b03166100cc565b61012e610162366004610a17565b610435565b61012e610175366004610a17565b6105b2565b61012e6101883660046109fe565b61072d565b6100f260045481565b61012e6101a43660046109ce565b6108d7565b6001546000906001600160a01b03838116911614806101d557506002546001600160a01b038381169116145b6102195760405162461bcd60e51b815260206004820152601060248201526f546f6b656e20696e636f72726563746f60801b60448201526064015b60405180910390fd5b6001546001600160a01b03908116908316036102575760035460045461024790670de0b6b3a7640000610a4f565b6102519190610a66565b92915050565b60045460035461024790670de0b6b3a7640000610a4f565b610277610915565b6102816000610942565b565b6000811161029057600080fd5b60006102a160045460035484610992565b90506003548111156102b257600080fd5b6002546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906102e690339030908790600401610a88565b6020604051808303816000875af1158015610305573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103299190610aac565b5060015460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561037b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039f9190610aac565b5081600460008282546103b29190610ace565b9250508190555080600360008282546103cb9190610ae1565b9091555050600254600154604080513381526001600160a01b039384166020820152929091169082015260608101839052608081018290527fad56699d0f375866eb895ed27203058a36a713382aaded78eb6b67da266d43329060a0015b60405180910390a15050565b61043d610915565b811580159061044b57508015155b61045457600080fd5b6001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061048890339030908790600401610a88565b6020604051808303816000875af11580156104a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cb9190610aac565b506002546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061050090339030908690600401610a88565b6020604051808303816000875af115801561051f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105439190610aac565b5081600360008282546105569190610ace565b92505081905550806004600082825461056f9190610ace565b909155505060408051338152602081018490529081018290527fac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee4590606001610429565b6105ba610915565b6000821180156105ca5750600081115b6105d357600080fd5b60015460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610624573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106489190610aac565b5060025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561069a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106be9190610aac565b5081600360008282546106d19190610ae1565b9250508190555080600460008282546106ea9190610ae1565b909155505060408051338152602081018490529081018290527f96cd817c6329656790ef8fba7675405193677d39619571282f5e21f3a98cd05990606001610429565b6000811161073a57600080fd5b600061074b60035460045484610992565b905060045481111561075c57600080fd5b6001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061079090339030908790600401610a88565b6020604051808303816000875af11580156107af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d39190610aac565b5060025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610825573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108499190610aac565b50816003600082825461085c9190610ace565b9250508190555080600460008282546108759190610ae1565b9091555050600154600254604080513381526001600160a01b039384166020820152929091169082015260608101839052608081018290527fad56699d0f375866eb895ed27203058a36a713382aaded78eb6b67da266d43329060a001610429565b6108df610915565b6001600160a01b03811661090957604051631e4fbdf760e01b815260006004820152602401610210565b61091281610942565b50565b6000546001600160a01b031633146102815760405163118cdaa760e01b8152336004820152602401610210565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008061099f8386610ace565b90506000816109ae8688610a4f565b6109b89190610a66565b90506109c48186610ae1565b9695505050505050565b6000602082840312156109e057600080fd5b81356001600160a01b03811681146109f757600080fd5b9392505050565b600060208284031215610a1057600080fd5b5035919050565b60008060408385031215610a2a57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761025157610251610a39565b600082610a8357634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215610abe57600080fd5b815180151581146109f757600080fd5b8082018082111561025157610251610a39565b8181038181111561025157610251610a3956fea264697066735822122084ac37073acf939739da0cd9553f3a58eefda9ce21d96e388aba3673f517044664736f6c634300081a0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b146101435780639cd441da146101545780639d7de6b314610167578063e4f1f70a1461017a578063efe48add1461018d578063f2fde38b1461019657600080fd5b80630fc63d10146100b95780633a60cacf146100e957806341976e09146101005780635f64b55b14610113578063715018a6146101265780638014a7aa14610130575b600080fd5b6001546100cc906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f260035481565b6040519081526020016100e0565b6100f261010e3660046109ce565b6101a9565b6002546100cc906001600160a01b031681565b61012e61026f565b005b61012e61013e3660046109fe565b610283565b6000546001600160a01b03166100cc565b61012e610162366004610a17565b610435565b61012e610175366004610a17565b6105b2565b61012e6101883660046109fe565b61072d565b6100f260045481565b61012e6101a43660046109ce565b6108d7565b6001546000906001600160a01b03838116911614806101d557506002546001600160a01b038381169116145b6102195760405162461bcd60e51b815260206004820152601060248201526f546f6b656e20696e636f72726563746f60801b60448201526064015b60405180910390fd5b6001546001600160a01b03908116908316036102575760035460045461024790670de0b6b3a7640000610a4f565b6102519190610a66565b92915050565b60045460035461024790670de0b6b3a7640000610a4f565b610277610915565b6102816000610942565b565b6000811161029057600080fd5b60006102a160045460035484610992565b90506003548111156102b257600080fd5b6002546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906102e690339030908790600401610a88565b6020604051808303816000875af1158015610305573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103299190610aac565b5060015460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561037b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039f9190610aac565b5081600460008282546103b29190610ace565b9250508190555080600360008282546103cb9190610ae1565b9091555050600254600154604080513381526001600160a01b039384166020820152929091169082015260608101839052608081018290527fad56699d0f375866eb895ed27203058a36a713382aaded78eb6b67da266d43329060a0015b60405180910390a15050565b61043d610915565b811580159061044b57508015155b61045457600080fd5b6001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061048890339030908790600401610a88565b6020604051808303816000875af11580156104a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cb9190610aac565b506002546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061050090339030908690600401610a88565b6020604051808303816000875af115801561051f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105439190610aac565b5081600360008282546105569190610ace565b92505081905550806004600082825461056f9190610ace565b909155505060408051338152602081018490529081018290527fac1d76749e5447b7b16f5ab61447e1bd502f3bb4807af3b28e620d1700a6ee4590606001610429565b6105ba610915565b6000821180156105ca5750600081115b6105d357600080fd5b60015460405163a9059cbb60e01b8152336004820152602481018490526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610624573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106489190610aac565b5060025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af115801561069a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106be9190610aac565b5081600360008282546106d19190610ae1565b9250508190555080600460008282546106ea9190610ae1565b909155505060408051338152602081018490529081018290527f96cd817c6329656790ef8fba7675405193677d39619571282f5e21f3a98cd05990606001610429565b6000811161073a57600080fd5b600061074b60035460045484610992565b905060045481111561075c57600080fd5b6001546040516323b872dd60e01b81526001600160a01b03909116906323b872dd9061079090339030908790600401610a88565b6020604051808303816000875af11580156107af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107d39190610aac565b5060025460405163a9059cbb60e01b8152336004820152602481018390526001600160a01b039091169063a9059cbb906044016020604051808303816000875af1158015610825573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108499190610aac565b50816003600082825461085c9190610ace565b9250508190555080600460008282546108759190610ae1565b9091555050600154600254604080513381526001600160a01b039384166020820152929091169082015260608101839052608081018290527fad56699d0f375866eb895ed27203058a36a713382aaded78eb6b67da266d43329060a001610429565b6108df610915565b6001600160a01b03811661090957604051631e4fbdf760e01b815260006004820152602401610210565b61091281610942565b50565b6000546001600160a01b031633146102815760405163118cdaa760e01b8152336004820152602401610210565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008061099f8386610ace565b90506000816109ae8688610a4f565b6109b89190610a66565b90506109c48186610ae1565b9695505050505050565b6000602082840312156109e057600080fd5b81356001600160a01b03811681146109f757600080fd5b9392505050565b600060208284031215610a1057600080fd5b5035919050565b60008060408385031215610a2a57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761025157610251610a39565b600082610a8357634e487b7160e01b600052601260045260246000fd5b500490565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215610abe57600080fd5b815180151581146109f757600080fd5b8082018082111561025157610251610a39565b8181038181111561025157610251610a3956fea264697066735822122084ac37073acf939739da0cd9553f3a58eefda9ce21d96e388aba3673f517044664736f6c634300081a0033",
  "devdoc": {
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 8,
        "contract": "contracts/SimpleDEX.sol:SimpleDEX",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 942,
        "contract": "contracts/SimpleDEX.sol:SimpleDEX",
        "label": "tokenA",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)877"
      },
      {
        "astId": 945,
        "contract": "contracts/SimpleDEX.sol:SimpleDEX",
        "label": "tokenB",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IERC20)877"
      },
      {
        "astId": 947,
        "contract": "contracts/SimpleDEX.sol:SimpleDEX",
        "label": "liquidTokenA",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 949,
        "contract": "contracts/SimpleDEX.sol:SimpleDEX",
        "label": "liquidTokenB",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)877": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}